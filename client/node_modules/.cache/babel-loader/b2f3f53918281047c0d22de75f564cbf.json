{"ast":null,"code":"var _jsxFileName = \"/Users/luisrubio/code/archive/automate-kaizen/src/components/youtube/Youtube.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactPlayer from 'react-player';\n\nclass Youtube extends Component {\n  constructor() {\n    super();\n    this.state = {\n      vid: 'Y7dpJ0oseIA',\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const KEY = 'AIzaSyCedIlWoDmVbm_p9-RPZbx0uSKOIXB-Ack';\n    const QUERY = 'J%C3%B3venes';\n    const CHANNEL = 'UCNpffyr-7_zP1x1lS89ByaQ&part=snippet,id&order=date&maxResults=20';\n    const url = 'https://www.googleapis.com/youtube/v3/search?q=' + QUERY + '&key=' + KEY + '&channelId=' + CHANNEL;\n    axios.get(url).then(res => {\n      const vid = res.data.items[0].id.videoId;\n      console.log(vid);\n      this.setState({\n        vid,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    let videoPlayer;\n\n    if (this.state.loading) {\n      videoPlayer = 'loading..';\n    } else {\n      videoPlayer = React.createElement(\"div\", {\n        className: \"ytv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"iframe\", {\n        width: \"560\",\n        height: \"315\",\n        src: 'https://www.youtube.com/embed/' + this.state.vid + '?autoplay=1',\n        frameBorder: \"0\",\n        allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(ReactPlayer, {\n        url: 'https://www.youtube.com/watch?v=' + this.state.video[this.state.current].id,\n        playing: this.state.playing,\n        muted: this.state.muted,\n        height: \"1px\",\n        width: \"1px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, videoPlayer);\n  }\n\n}\n\nexport default Youtube;","map":{"version":3,"sources":["/Users/luisrubio/code/archive/automate-kaizen/src/components/youtube/Youtube.js"],"names":["React","Component","axios","ReactPlayer","Youtube","constructor","state","vid","loading","componentDidMount","KEY","QUERY","CHANNEL","url","get","then","res","data","items","id","videoId","console","log","setState","render","videoPlayer","video","current","playing","muted"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAC9BI,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE,aADM;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,GAAG,GAAG,yCAAZ;AACA,UAAMC,KAAK,GAAG,cAAd;AACA,UAAMC,OAAO,GACX,mEADF;AAEA,UAAMC,GAAG,GACP,oDACAF,KADA,GAEA,OAFA,GAGAD,GAHA,GAIA,aAJA,GAKAE,OANF;AAOAV,IAAAA,KAAK,CAACY,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoBC,GAAG,IAAI;AACzB,YAAMT,GAAG,GAAGS,GAAG,CAACC,IAAJ,CAASC,KAAT,CAAe,CAAf,EAAkBC,EAAlB,CAAqBC,OAAjC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYf,GAAZ;AACA,WAAKgB,QAAL,CAAc;AAAEhB,QAAAA,GAAF;AAAOC,QAAAA,OAAO,EAAE;AAAhB,OAAd;AACD,KAJD;AAKD;;AAEDgB,EAAAA,MAAM,GAAG;AACP,QAAIC,WAAJ;;AACA,QAAI,KAAKnB,KAAL,CAAWE,OAAf,EAAwB;AACtBiB,MAAAA,WAAW,GAAG,WAAd;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,GACT;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,KAAK,EAAC,KADR;AAEE,QAAA,MAAM,EAAC,KAFT;AAGE,QAAA,GAAG,EACD,mCAAmC,KAAKnB,KAAL,CAAWC,GAA9C,GAAoD,aAJxD;AAME,QAAA,WAAW,EAAC,GANd;AAOE,QAAA,KAAK,EAAC,yEAPR;AAQE,QAAA,eAAe,MARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAWE,oBAAC,WAAD;AACE,QAAA,GAAG,EACD,qCACA,KAAKD,KAAL,CAAWoB,KAAX,CAAiB,KAAKpB,KAAL,CAAWqB,OAA5B,EAAqCR,EAHzC;AAKE,QAAA,OAAO,EAAE,KAAKb,KAAL,CAAWsB,OALtB;AAME,QAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWuB,KANpB;AAOE,QAAA,MAAM,EAAC,KAPT;AAQE,QAAA,KAAK,EAAC,KARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,CADF;AAwBD;;AACD,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMJ,WAAN,CAAP;AACD;;AA3D6B;;AA8DhC,eAAerB,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactPlayer from 'react-player';\n\nclass Youtube extends Component {\n  constructor() {\n    super();\n    this.state = {\n      vid: 'Y7dpJ0oseIA',\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const KEY = 'AIzaSyCedIlWoDmVbm_p9-RPZbx0uSKOIXB-Ack';\n    const QUERY = 'J%C3%B3venes';\n    const CHANNEL =\n      'UCNpffyr-7_zP1x1lS89ByaQ&part=snippet,id&order=date&maxResults=20';\n    const url =\n      'https://www.googleapis.com/youtube/v3/search?q=' +\n      QUERY +\n      '&key=' +\n      KEY +\n      '&channelId=' +\n      CHANNEL;\n    axios.get(url).then(res => {\n      const vid = res.data.items[0].id.videoId;\n      console.log(vid);\n      this.setState({ vid, loading: false });\n    });\n  }\n\n  render() {\n    let videoPlayer;\n    if (this.state.loading) {\n      videoPlayer = 'loading..';\n    } else {\n      videoPlayer = (\n        <div className=\"ytv\">\n          <iframe\n            width=\"560\"\n            height=\"315\"\n            src={\n              'https://www.youtube.com/embed/' + this.state.vid + '?autoplay=1'\n            }\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n          ></iframe>\n          <ReactPlayer\n            url={\n              'https://www.youtube.com/watch?v=' +\n              this.state.video[this.state.current].id\n            }\n            playing={this.state.playing}\n            muted={this.state.muted}\n            height=\"1px\"\n            width=\"1px\"\n          />\n        </div>\n      );\n    }\n    return <div>{videoPlayer}</div>;\n  }\n}\n\nexport default Youtube;\n"]},"metadata":{},"sourceType":"module"}