{"ast":null,"code":"import _classCallCheck from\"/Users/luisrubio/code/archive/tweeter/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/luisrubio/code/archive/tweeter/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/luisrubio/code/archive/tweeter/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/luisrubio/code/archive/tweeter/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/luisrubio/code/archive/tweeter/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import axios from'axios';import moment from'moment';import{tz}from'moment-timezone';var Weather=/*#__PURE__*/function(_Component){_inherits(Weather,_Component);function Weather(){var _this;_classCallCheck(this,Weather);_this=_possibleConstructorReturn(this,_getPrototypeOf(Weather).call(this));_this.update=function(){// get weather\naxios.get('http://fcc-weather-api.glitch.me/api/current?lat=30.333071&lon=-95.350822').then(function(res){_this.setState({weather:res.data,loading:false});console.log(_this.state.weather.main.temp);});};_this.state={loading:true,weather:[]};return _this;}_createClass(Weather,[{key:\"componentDidMount\",value:function componentDidMount(){this.update();}},{key:\"render\",value:function render(){var text;if(this.state.loading){text=React.createElement(\"div\",{className:\"text\"},React.createElement(\"div\",null,\"Weather\"),React.createElement(\"div\",{className:\"tile-icon\"}),React.createElement(\"div\",null,\"loading..\"));}else{text=React.createElement(\"div\",{className:\"text\"},React.createElement(\"div\",null,\"Weather\"),React.createElement(\"div\",{className:\"tile-icon\"},Math.round(this.state.weather.main.temp*9/5+32),\"\\xB0 F\"),React.createElement(\"div\",null,this.state.weather.weather[0].description));}return React.createElement(\"div\",{className:\"col-2\"},React.createElement(\"div\",{className:\"tile\"},React.createElement(\"div\",{className:\"bar\"}),text));}}]);return Weather;}(Component);export default Weather;","map":{"version":3,"sources":["/Users/luisrubio/code/archive/tweeter/client/src/components/tiles/Weather.js"],"names":["React","Component","axios","moment","tz","Weather","update","get","then","res","setState","weather","data","loading","console","log","state","main","temp","text","Math","round","description"],"mappings":"yoBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,OAASC,EAAT,KAAmB,iBAAnB,C,GACMC,CAAAA,O,iEACJ,kBAAc,yCACZ,2EADY,MAWdC,MAXc,CAWL,UAAM,CACb;AACAJ,KAAK,CACFK,GADH,CAEI,2EAFJ,EAIGC,IAJH,CAIQ,SAAAC,GAAG,CAAI,CACX,MAAKC,QAAL,CAAc,CAAEC,OAAO,CAAEF,GAAG,CAACG,IAAf,CAAqBC,OAAO,CAAE,KAA9B,CAAd,EACAC,OAAO,CAACC,GAAR,CAAY,MAAKC,KAAL,CAAWL,OAAX,CAAmBM,IAAnB,CAAwBC,IAApC,EACD,CAPH,EAQD,CArBa,CAEZ,MAAKF,KAAL,CAAa,CACXH,OAAO,CAAE,IADE,CAEXF,OAAO,CAAE,EAFE,CAAb,CAFY,aAMb,C,iFACmB,CAClB,KAAKL,MAAL,GACD,C,uCAaQ,CACP,GAAIa,CAAAA,IAAJ,CACA,GAAI,KAAKH,KAAL,CAAWH,OAAf,CAAwB,CACtBM,IAAI,CACF,2BAAK,SAAS,CAAC,MAAf,EACE,yCADF,CAEE,2BAAK,SAAS,CAAC,WAAf,EAFF,CAKE,2CALF,CADF,CASD,CAVD,IAUO,CACLA,IAAI,CACF,2BAAK,SAAS,CAAC,MAAf,EACE,yCADF,CAEE,2BAAK,SAAS,CAAC,WAAf,EAOGC,IAAI,CAACC,KAAL,CAAY,KAAKL,KAAL,CAAWL,OAAX,CAAmBM,IAAnB,CAAwBC,IAAxB,CAA+B,CAAhC,CAAqC,CAArC,CAAyC,EAApD,CAPH,UAFF,CAWE,+BAAM,KAAKF,KAAL,CAAWL,OAAX,CAAmBA,OAAnB,CAA2B,CAA3B,EAA8BW,WAApC,CAXF,CADF,CAeD,CACD,MACE,4BAAK,SAAS,CAAC,OAAf,EACE,2BAAK,SAAS,CAAC,MAAf,EACE,2BAAK,SAAS,CAAC,KAAf,EADF,CAEGH,IAFH,CADF,CADF,CAQD,C,qBA5DmBlB,S,EA+DtB,cAAeI,CAAAA,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { tz } from 'moment-timezone';\nclass Weather extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      weather: []\n    };\n  }\n  componentDidMount() {\n    this.update();\n  }\n\n  update = () => {\n    // get weather\n    axios\n      .get(\n        'http://fcc-weather-api.glitch.me/api/current?lat=30.333071&lon=-95.350822'\n      )\n      .then(res => {\n        this.setState({ weather: res.data, loading: false });\n        console.log(this.state.weather.main.temp);\n      });\n  };\n  render() {\n    let text;\n    if (this.state.loading) {\n      text = (\n        <div className=\"text\">\n          <div>Weather</div>\n          <div className=\"tile-icon\">\n            {/* <i className=\"fas fa-cloud op\"></i> */}\n          </div>\n          <div>loading..</div>\n        </div>\n      );\n    } else {\n      text = (\n        <div className=\"text\">\n          <div>Weather</div>\n          <div className=\"tile-icon\">\n            {/* <i className=\"fas fa-cloud op\"></i> */}\n            {/* <img\n              src={this.state.weather.weather[0].icon}\n              class=\"weather-icon\"\n              alt=\"\"\n            /> */}\n            {Math.round((this.state.weather.main.temp * 9) / 5 + 32)}Â° F\n          </div>\n          <div>{this.state.weather.weather[0].description}</div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"col-2\">\n        <div className=\"tile\">\n          <div className=\"bar\"></div>\n          {text}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}