{"ast":null,"code":"import React from'react';import{Link}from'react-router-dom';var DynamicTile=function DynamicTile(props){var data=props.data;var barLength=0;var totalCompleted=0;data.forEach(function(task){if(task.completed){totalCompleted++;}});var percentage=Math.round(totalCompleted/data.length*100);var color;if(percentage===100){barLength=97.5;}else{barLength=percentage;}if(percentage===100){color='b-100';}else if(percentage>74){color='b-75';}else if(percentage>49){color='b-50';}else if(percentage>24){color='b-25';}else{color='b-25';}var barSize={height:barLength+'%'};var display;if(data.length>0&&percentage===100){display=React.createElement(\"div\",{className:\"tile\"},React.createElement(\"div\",{className:'bar '+color,style:barSize}),React.createElement(\"div\",{className:\"text\"},React.createElement(\"div\",null,props.top),React.createElement(\"div\",{className:\"tile-icon\"},React.createElement(\"i\",{className:props.icon})),React.createElement(\"div\",null,totalCompleted,\"/\",props.data.length,\" Completed - \",percentage,\"%\")));}else if(data.length>0){display=React.createElement(Link,{to:'/cat/'+props.to},React.createElement(\"div\",{className:\"tile\"},React.createElement(\"div\",{className:'bar '+color,style:barSize}),React.createElement(\"div\",{className:\"text\"},React.createElement(\"div\",null,props.top),React.createElement(\"div\",{className:\"tile-icon\"},React.createElement(\"i\",{className:props.icon})),React.createElement(\"div\",null,totalCompleted,\"/\",props.data.length,\" Completed - \",percentage,\"%\"))));}else{display=React.createElement(\"div\",{className:\"tile\"},React.createElement(\"div\",{className:\"bar\"}),React.createElement(\"div\",{className:\"text\"},React.createElement(\"div\",null,props.top),React.createElement(\"div\",{className:\"tile-icon\"},React.createElement(\"i\",{className:props.icon+' op'})),React.createElement(\"div\",null)));}return React.createElement(\"div\",{className:\"col-2\"},display);};export default DynamicTile;","map":{"version":3,"sources":["/Users/luisrubio/code/archive/tweeter/client/src/components/tiles/DynamicTile.js"],"names":["React","Link","DynamicTile","props","data","barLength","totalCompleted","forEach","task","completed","percentage","Math","round","length","color","barSize","height","display","top","icon","to"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst DynamicTile = props => {\n  const data = props.data;\n  let barLength = 0;\n  let totalCompleted = 0;\n  data.forEach(task => {\n    if (task.completed) {\n      totalCompleted++;\n    }\n  });\n  let percentage = Math.round((totalCompleted / data.length) * 100);\n  let color;\n\n  if (percentage === 100) {\n    barLength = 97.5;\n  } else {\n    barLength = percentage;\n  }\n\n  if (percentage === 100) {\n    color = 'b-100';\n  } else if (percentage > 74) {\n    color = 'b-75';\n  } else if (percentage > 49) {\n    color = 'b-50';\n  } else if (percentage > 24) {\n    color = 'b-25';\n  } else {\n    color = 'b-25';\n  }\n\n  const barSize = {\n    height: barLength + '%'\n  };\n\n  let display;\n  if (data.length > 0 && percentage === 100) {\n    display = (\n      <div className=\"tile\">\n        <div className={'bar ' + color} style={barSize}></div>\n        <div className=\"text\">\n          <div>{props.top}</div>\n          <div className=\"tile-icon\">\n            <i className={props.icon}></i>\n          </div>\n          <div>\n            {totalCompleted}/{props.data.length} Completed - {percentage}%\n          </div>\n        </div>\n      </div>\n    );\n  } else if (data.length > 0) {\n    display = (\n      <Link to={'/cat/' + props.to}>\n        <div className=\"tile\">\n          <div className={'bar ' + color} style={barSize}></div>\n          <div className=\"text\">\n            <div>{props.top}</div>\n            <div className=\"tile-icon\">\n              <i className={props.icon}></i>\n            </div>\n            <div>\n              {totalCompleted}/{props.data.length} Completed - {percentage}%\n            </div>\n          </div>\n        </div>\n      </Link>\n    );\n  } else {\n    display = (\n      <div className=\"tile\">\n        <div className=\"bar\"></div>\n        <div className=\"text\">\n          <div>{props.top}</div>\n          <div className=\"tile-icon\">\n            <i className={props.icon + ' op'}></i>\n          </div>\n          <div></div>\n        </div>\n      </div>\n    );\n  }\n  return <div className=\"col-2\">{display}</div>;\n};\n\nexport default DynamicTile;\n"]},"metadata":{},"sourceType":"module"}