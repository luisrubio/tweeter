{"ast":null,"code":"var _jsxFileName = \"/Users/luisrubio/code/archive/automate-kaizen/src/components/youtube/Youtube.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactPlayer from 'react-player';\n\nclass Youtube extends Component {\n  constructor() {\n    super();\n    this.state = {\n      vid: 'Y7dpJ0oseIA',\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const KEY = 'AIzaSyCedIlWoDmVbm_p9-RPZbx0uSKOIXB-Ack';\n    const CATEGORY = 'menores';\n    const TERMY = 'devocion matutina para';\n    const months = ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'noviembre', 'diciembre'];\n    const d = new Date();\n    const DATE = months[d.getMonth()] + ' ' + d.getDate() + ' ' + d.getFullYear();\n    const QUERY = TERMY + ' ' + CATEGORY + ' ' + DATE;\n    console.log(QUERY); // const CHANNEL = 'UCNpffyr-7_zP1x1lS89ByaQ';\n\n    const url = 'https://www.googleapis.com/youtube/v3/search?q=' + QUERY + '&key=' + KEY + '&part=snippet,id&order=date&maxResults=20';\n    console.log(url);\n    axios.get(url).then(res => {\n      const vid = res.data.items[0].id.videoId;\n      console.log(results); // console.log(vid);\n\n      this.setState({\n        vid,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    let videoPlayer;\n\n    if (this.state.loading) {\n      videoPlayer = 'loading..';\n    } else {\n      videoPlayer = React.createElement(\"div\", {\n        className: \"ytv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"overhead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, videoPlayer);\n  }\n\n}\n\nexport default Youtube;","map":{"version":3,"sources":["/Users/luisrubio/code/archive/automate-kaizen/src/components/youtube/Youtube.js"],"names":["React","Component","axios","ReactPlayer","Youtube","constructor","state","vid","loading","componentDidMount","KEY","CATEGORY","TERMY","months","d","Date","DATE","getMonth","getDate","getFullYear","QUERY","console","log","url","get","then","res","data","items","id","videoId","results","setState","render","videoPlayer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAC9BI,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE,aADM;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,GAAG,GAAG,yCAAZ;AACA,UAAMC,QAAQ,GAAG,SAAjB;AACA,UAAMC,KAAK,GAAG,wBAAd;AACA,UAAMC,MAAM,GAAG,CACb,OADa,EAEb,SAFa,EAGb,OAHa,EAIb,OAJa,EAKb,MALa,EAMb,OANa,EAOb,OAPa,EAQb,QARa,EASb,YATa,EAUb,WAVa,EAWb,WAXa,CAAf;AAaA,UAAMC,CAAC,GAAG,IAAIC,IAAJ,EAAV;AACA,UAAMC,IAAI,GACRH,MAAM,CAACC,CAAC,CAACG,QAAF,EAAD,CAAN,GAAuB,GAAvB,GAA6BH,CAAC,CAACI,OAAF,EAA7B,GAA2C,GAA3C,GAAiDJ,CAAC,CAACK,WAAF,EADnD;AAGA,UAAMC,KAAK,GAAGR,KAAK,GAAG,GAAR,GAAcD,QAAd,GAAyB,GAAzB,GAA+BK,IAA7C;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAtBkB,CAuBlB;;AACA,UAAMG,GAAG,GACP,oDACAH,KADA,GAEA,OAFA,GAGAV,GAHA,GAIA,2CALF;AAMAW,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACArB,IAAAA,KAAK,CAACsB,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoBC,GAAG,IAAI;AACzB,YAAMnB,GAAG,GAAGmB,GAAG,CAACC,IAAJ,CAASC,KAAT,CAAe,CAAf,EAAkBC,EAAlB,CAAqBC,OAAjC;AAEAT,MAAAA,OAAO,CAACC,GAAR,CAAYS,OAAZ,EAHyB,CAKzB;;AACA,WAAKC,QAAL,CAAc;AAAEzB,QAAAA,GAAF;AAAOC,QAAAA,OAAO,EAAE;AAAhB,OAAd;AACD,KAPD;AAQD;;AAEDyB,EAAAA,MAAM,GAAG;AACP,QAAIC,WAAJ;;AACA,QAAI,KAAK5B,KAAL,CAAWE,OAAf,EAAwB;AACtB0B,MAAAA,WAAW,GAAG,WAAd;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,GACT;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAqBD;;AACD,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,WAAN,CAAP;AACD;;AA9E6B;;AAiFhC,eAAe9B,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactPlayer from 'react-player';\n\nclass Youtube extends Component {\n  constructor() {\n    super();\n    this.state = {\n      vid: 'Y7dpJ0oseIA',\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const KEY = 'AIzaSyCedIlWoDmVbm_p9-RPZbx0uSKOIXB-Ack';\n    const CATEGORY = 'menores';\n    const TERMY = 'devocion matutina para';\n    const months = [\n      'enero',\n      'febrero',\n      'marzo',\n      'abril',\n      'mayo',\n      'junio',\n      'julio',\n      'agosto',\n      'septiembre',\n      'noviembre',\n      'diciembre'\n    ];\n    const d = new Date();\n    const DATE =\n      months[d.getMonth()] + ' ' + d.getDate() + ' ' + d.getFullYear();\n\n    const QUERY = TERMY + ' ' + CATEGORY + ' ' + DATE;\n    console.log(QUERY);\n    // const CHANNEL = 'UCNpffyr-7_zP1x1lS89ByaQ';\n    const url =\n      'https://www.googleapis.com/youtube/v3/search?q=' +\n      QUERY +\n      '&key=' +\n      KEY +\n      '&part=snippet,id&order=date&maxResults=20';\n    console.log(url);\n    axios.get(url).then(res => {\n      const vid = res.data.items[0].id.videoId;\n\n      console.log(results);\n\n      // console.log(vid);\n      this.setState({ vid, loading: false });\n    });\n  }\n\n  render() {\n    let videoPlayer;\n    if (this.state.loading) {\n      videoPlayer = 'loading..';\n    } else {\n      videoPlayer = (\n        <div className=\"ytv\">\n          <div className=\"overhead\"></div>\n          {/* <iframe\n            width=\"560\"\n            height=\"315\"\n            src={\n              'https://www.youtube.com/embed/' + this.state.vid + '?autoplay=1'\n            }\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n          ></iframe> */}\n          {/* <ReactPlayer\n            url={'https://www.youtube.com/watch?v=' + this.state.vid}\n            playing={true}\n            width=\"100%\"\n            height=\"100vh\"\n          /> */}\n        </div>\n      );\n    }\n    return <div>{videoPlayer}</div>;\n  }\n}\n\nexport default Youtube;\n"]},"metadata":{},"sourceType":"module"}